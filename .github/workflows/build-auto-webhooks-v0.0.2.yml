name: build-auto-webhooks-v0.0.2
on:
  push:
  pull_request:

env:
  AWS_REGION: us-west-2
  S3_BUCKET: indent-artifacts-us-west-2
  INDENT_TAG: ${{ github.sha }}

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest]
        node: [14]
        indent-runtime: [aws-lambda]
        integration: [okta, pagerduty, tailscale]
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.ARTIFACT_BUILD_TESTING_AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.ARTIFACT_BUILD_TESTING_AWS_SECRET_ACCESS_KEY }}
          # aws-session-token: ${{ secrets.AWS_SESSION_TOKEN }} # if you have/need it
          aws-region: ${{ env.AWS_REGION }}

      - name: setup-node
        uses: actions/setup-node@v2
        with:
          node-version: ${{ matrix.node }}
          cache: yarn

      - name: Create example root directory
        run: |
          mkdir -p tmp/examples

      - name: Create example (${{ matrix.integration }})
        env:
          WEBHOOK_DIR: tmp/examples/${{ matrix.indent-runtime }}-${{ matrix.integration }}-webhook
          INTEGRATION: ${{ matrix.integration }}
        run: |
          mkdir -p $WEBHOOK_DIR
          cp -r utils/. $WEBHOOK_DIR && cp -r utils/* $WEBHOOK_DIR
          mv $WEBHOOK_DIR/package.example.json $WEBHOOK_DIR/package.json
          cd utils/scripts && yarn && cd ../../ && npx ts-node ./utils/scripts/index.ts && npx ts-node ./utils/scripts/js/writeGithubAction.ts
          sed -i "s/\@indent\/integration-example/\@indent\/integration-${INTEGRATION}/g" $WEBHOOK_DIR/package.json
          rm -r $WEBHOOK_DIR/scripts/*.ts && rm -r $WEBHOOK_DIR/scripts/js

      - name: Setup SSH
        uses: webfactory/ssh-agent@ee29fafb6aa450493bac9136b346e51ea60a8b5e
        with:
          ssh-private-key: ${{ secrets.INDENT_BOT_SSH_PRIVATE_KEY }}

      - name: Synchronize ${{ matrix.integration }} using Copybara
        env:
          GH_TOKEN: ${{ secrets.IndentBotKey }}
          WORKFLOW: ${{ matrix.integration }}
        run: |
          git config --global user.name "Indent Bot"
          git config --global user.email "indent-bot@indent.com"
          echo "https://indent-bot:${GH_TOKEN}@api.github.com" > ~/.git-credentials
          echo "Running Copybara..."
          GITHUB_REF=. make copybara-${WORKFLOW} COPYBARA_FLAGS="--github-destination-pr-branch copybara-integration-sync $([[ $GITHUB_REF == *"pull"* ]] && echo "--dry-run")" 2>&1 | tee /tmp/copybara-logs
          if [[ -n $(</tmp/copybara-logs grep "make: ***" | grep "Error") ]]; then
                  if [[ -n $(</tmp/copybara-logs grep "Migration of the revision resulted in an empty change") ]]; then
                          echo "Already up-to-date, skipping..."
                          exit 0
                  fi
                  echo "Encountered error"
                  exit 2
          fi
          echo "Copybara ran successfully"

      - name: Build example (${{ matrix.integration }})
        env:
          WEBHOOK_DIR: tmp/examples/${{ matrix.indent-runtime }}-${{ matrix.integration }}-webhook
        run: |
          cd $WEBHOOK_DIR/
          yarn build

      # TODO: add public access
      - name: Upload to AWS S3
        env:
          WEBHOOK_DIR: tmp/examples/${{ matrix.indent-runtime }}-${{ matrix.integration }}-webhook
        run: |
          cd $WEBHOOK_DIR && aws s3 cp ./dist/layers/layers.zip s3://${{ env.S3_BUCKET }}/webhooks/aws/lambda/${{ matrix.integration }}-${INDENT_TAG}-canary-deps.zip --acl public-read
          aws s3 cp ./dist/function.zip s3://${{ env.S3_BUCKET }}/webhooks/aws/lambda/${{ matrix.integration }}-${INDENT_TAG}-canary-function.zip --acl public-read
