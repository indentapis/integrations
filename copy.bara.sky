author = authoring.overwrite("Indent Bot <indent-bot@indent.com>")

integration_target_okta = "git@github.com:indentapis/template-aws-lambda-okta.git"
integration_target_pagerduty = "git@github.com:indentapis/template-aws-lambda-pagerduty.git"
integration_target_tailscale = "git@github.com:indentapis/template-aws-lambda-tailscale.git"
integration_target_auto_approval = "git@github.com:indentapis/template-aws-lambda-auto-approval.git"
integration_target_aws_iam = "git@github.com:indentapis/template-aws-lambda-aws-iam.git"

core.workflow(
    name = "okta",
    origin = folder.origin(),
    destination = git.github_pr_destination(
      url = integration_target_okta,
      destination_ref = "main"
    ),
    origin_files = glob(["tmp/examples/aws-lambda-okta-webhook", "tmp/examples/aws-lambda-okta-webhook/**"]),
    destination_files = glob(["**"]),
    authoring = author,
    transformations = [
      metadata.replace_message("sync(integration): aws-lambda-okta"),
      core.move("tmp/examples/aws-lambda-okta-webhook", ""),
    ],
)

core.workflow(
    name = "pagerduty",
    origin = folder.origin(),
    destination = git.github_pr_destination(
      url = integration_target_pagerduty,
      destination_ref = "main"
    ),
    origin_files = glob(["tmp/examples/aws-lambda-pagerduty-webhook", "tmp/examples/aws-lambda-pagerduty-webhook/**"]),
    destination_files = glob(["**"]),
    authoring = author,
    transformations = [
      metadata.replace_message("sync(integration): aws-lambda-pagerduty"),
      core.move("tmp/examples/aws-lambda-pagerduty-webhook", ""),
    ],
)

core.workflow(
    name = "tailscale",
    origin = folder.origin(),
    destination = git.github_pr_destination(
      url = integration_target_tailscale,
      destination_ref = "main"
    ),
    origin_files = glob(["tmp/examples/aws-lambda-tailscale-webhook", "tmp/examples/aws-lambda-tailscale-webhook/**"]),
    destination_files = glob(["**"]),
    authoring = author,
    transformations = [
      metadata.replace_message("sync(integration): aws-lambda-tailscale"),
      core.move("tmp/examples/aws-lambda-tailscale-webhook", ""),
    ],
)

core.workflow(
    name = "auto-approval",
    origin = folder.origin(),
    destination = git.github_pr_destination(
      url = integration_target_auto_approval,
      destination_ref = "main"
    ),
    origin_files = glob(["tmp/examples/aws-lambda-auto-approval-webhook", "tmp/examples/aws-lambda-auto-approval-webhook/**"]),
    destination_files = glob(["**"]),
    authoring = author,
    transformations = [
      metadata.replace_message("sync(integration): aws-lambda-auto-approval"),
      core.move("tmp/examples/aws-lambda-auto-approval-webhook", ""),
    ],
)

core.workflow(
    name = "aws-iam",
    origin = folder.origin(),
    destination = git.github_pr_destination(
      url = integration_target_aws_iam,
      destination_ref = "main"
    ),
    origin_files = glob(["tmp/examples/aws-lambda-aws-iam-webhook", "tmp/examples/aws-lambda-aws-iam-webhook/**"]),
    destination_files = glob(["**"]),
    authoring = author,
    transformations = [
      metadata.replace_message("sync(integration): aws-lambda-aws-iam"),
      core.move("tmp/examples/aws-lambda-aws-iam-webhook", ""),
    ],
)